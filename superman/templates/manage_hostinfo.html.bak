{% extends 'base.html' %}
{% from 'bootstrap/pagination.html' import render_pagination %}

{% block title %}Manage Posts{% endblock %}

{% block content %}

<!-- <main class="app-content"> -->
  <div class="app-title">
    <div>
      <h1><i class="fa fa-th-list"></i> {{ _('Host Info') }}</h1>
      <p> {{ _('Host Info Display') }}</p>
    </div>
    <ul class="app-breadcrumb breadcrumb side">
      <li class="breadcrumb-item"><i class="fa fa-home fa-lg"></i></li>
      <li class="breadcrumb-item"> {{ _('Host List') }}</li>
      <li class="breadcrumb-item active"><a href="#"> {{ _('Host Info Details') }}</a></li>
    </ul>
  </div>

    <div class="page-header">
        <h1> {{ _('Hosts Num') }} | 
            <small class="text-muted">{{ pagination.total }}</small>
            <span class="float-right"><a class="btn btn-primary btn-sm"
                                         href="{{ url_for('dashboard.new_hostinfo') }}"> {{ _('New HostInfo') }}</a></span>
        </h1>
    </div>


    {% if hostinfos %}
    <table class="table table-striped">
        <thead>
        <tr>
            <th>{{ _('No.') }}</th>
            <th>{{ _('Host') }}</th>
            <th>{{ _('Port') }}</th>
            <th>{{ _("Username") }}</th>
            <th>{{ _('Password') }}</th>
            <th>{{ _('Comments') }}</th>
            <th>{{ _('Hostgroup') }}</th>
            <th>{{ _('Date') }}</th>
            <th>{{ _('Actions') }}</th>
        </tr>
        </thead>
        {% for hostinfo in hostinfos %}
        <tr>
            <td>{{ loop.index + ((page - 1) * config.SUPERMAN_MANAGE_POST_PER_PAGE) }}</td>
            <td><a href="{{ url_for('admin.server_status', hostinfo_id=hostinfo.id) }}">{{ hostinfo.host }}</a></td>
            <td><a href="#comments">{{ hostinfo.port }}</a></td>
            <td><a href="#comments">{{ hostinfo.username }}</a></td>
            <td><a href="#comments">{{ hostinfo.password }}</a></td>
            <td><a href="#comments">{{ hostinfo.comment }}</a></td>
            <td><a href="{{ url_for('.details_hostgroup', hostgroup_id=hostinfo.group_id) }}">{{ hostinfo.hostgroup.name }}</a></td>
            <td><a href="#comments">{{ moment(hostinfo.timestamp).format('LL') }}</a></td>
            <td>
                <a class="btn btn-info btn-sm" href="{{ url_for('.edit_hostinfo', hostinfo_id=hostinfo.id) }}"><i class="fa fa-pencil fa-fw" aria-hidden="true"></i> Edit</a>
               <!--  <a class="btn btn-danger btn-sm" onclick="deleteHost('{{ hostinfo.id }}')"><i class="fa fa-trash-o fa-lg"></i> Delete</a> -->
                <button type="submit" class="btn btn-danger btn-sm" onclick="deleteHost('{{ hostinfo.id }}')"><i class="fa fa-trash-o fa-lg"></i> Delete</button>
<!--                 <form class="inline" method="post" action="{{ url_for('.delete_hostinfo', hostinfo_id=hostinfo.id, next=request.full_path) }}">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}"/>
                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?');"><i class="fa fa-trash-o fa-lg"></i> Delete</button>
                </form> -->
            </td>
        </tr>
        {% endfor %}
    </table>
    <div class="page-footer">{{ render_pagination(pagination) }}</div>
    {% else %}
    <div class="tip"><h5>{{ _('No hostinfos.') }}</h5></div>

    {% endif %}

<!-- </main> -->
{% endblock %}


{% block scripts %}


<script type="text/javascript">

      function deleteHost(hostinfoId) {
//         Swal.fire({
//   title: '确定删除吗？', 
//   text: '你将无法恢复它！', 
//   type: 'warning',
//   showCancelButton: true, 
//   confirmButtonColor: '#3085d6',
//   cancelButtonColor: '#d33',
//   confirmButtonText: '确定删除！', 
//   cancelButtonText: '取消删除！',
//   confirmButtonClass: 'btn btn-success',
//   cancelButtonClass: 'btn btn-danger',
//   buttonsStyling: false
// }).then(function() {
//             $.ajax({
//                 url: "/hostinfo/" + hostinfoId + "/delete",
//                 type: "POST"
//               })
//               .done(function(data) {
//                   Swal.fire(
//                     '已删除！',
//                     '你的文件已经被删除。',
//                     'success'
//                   ); 
//               })
//               .error(function(data) {
//                   Swal.fire(
//                     '删除失败！',
//                     '请稍后重试。',
//                     'error'
//                   ); 
//               });

// }, function(dismiss) {
//   // dismiss的值可以是'cancel', 'overlay',
//   // 'close', 'timer'
//   if (dismiss === 'cancel') {
//     Swal.fire(
//       '已取消！',
//       '你的虚拟文件是安全的:)',
//       'error'
//     ); 
//   } 
// })

            // Swal.fire({

            //     title: "亲，您确定删除吗？",
            //     text: "删除可就找不回来了哦！",
            //     type: "warning",
            //     showCancelButton: true,
            //     confirmButtonColor: "#DD6B55",
            //     confirmButtonText: "确定删除！",
            //     cancelButtonText: "取消删除！",

            // }, 
            // function(dismiss) {
            //      if (dismiss) {
            //           $.ajax({
            //             url: "/hostinfo/" + hostinfoId + "/delete",
            //             type: "POST"
            //           })
            //           .done(function(data) {
            //             Swal.fire("Deleted!", "Your file was successfully deleted!", "success");
            //           })
            //           .error(function(data) {
            //             Swal.fire("Oops", "We couldn't connect to the server!", "error");
            //           });
            //     } else {
            //         Swal.fire(
            //           '已取消！',
            //           '你的虚拟文件是安全的:)',
            //           'error'
            //         ); 
            //     }
            // });

    // swal({
    //     title: "确定要删除这个产品吗？",
    //     text: "删除后可就无法恢复了。",
    //     type: "warning",
    //     showCancelButton: true,
    //     closeOnConfirm: false,
    //     confirmButtonText: "是的，我要删除！",
    //     confirmButtonColor: "#ec6c62",
    //     cancelButtonText: "容我三思"
    // }, function (isConfirm) {
    //     if (!isConfirm) return;
    //     $.ajax({
    //         type: "post",
    //         url: "/hostinfo/" + hostinfoId + "/delete",
    //         success: function (data) {
    //             var d_obj = $.parseJSON(data);
    //             console.log(d_obj);
    //             if (d_obj.code === "success") { //后端删除成功
    //                 swal("删除成功", d_obj.info, "success");
    //                 // $("#p-" + recordID).remove()  //删除页面中那一行数据
    //             } else {
    //                 swal("出错啦。。。", d_obj.info, "error");  //后端删除失败
    //             }
    //         },
    //         error: function () {  // ajax请求失败
    //             swal("啊哦。。。", "服务器走丢了。。。", "error");
    //         }
    //     })
    // });

    swal({
      title: "确定要删除这个机器么？", 
      text: "删除后可就无法恢复了。", 
      type: "warning",
      showCancelButton: true,
      closeOnConfirm: false,
      confirmButtonText: "是的，我要删除！",
      cancelButtonText: "容我三思",
      confirmButtonColor: "#ec6c62"
    }, 
    function(isConfirm) {
        if (!isConfirm) return;
        $.ajax({
            url: "/hostinfo/" + hostinfoId + "/delete",
            type: "GET"
        })
        .done(function(data) {
            swal("Deleted!", "Your file was successfully deleted!", "success");
        })
        .fail(function(data) {
            swal("Oops", "We couldn't connect to the server!", "error");
        });
    });
};
</script>
{% endblock scripts %}
